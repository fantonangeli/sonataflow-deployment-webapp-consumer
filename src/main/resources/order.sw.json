{
  "id": "order",
  "version": "1.0",
  "specVersion": "0.8",
  "name": "Order Workflow",
  "description": "Order Workflow Sample",
  "start": "Order Received",
  "functions": [
    {
      "name": "printMessage",
      "type": "custom",
      "operation": "sysout"
    },
    {
      "name": "sendOrder",
      "operation": "specs/supplier.yaml#sendOrder",
      "type": "rest"
    },
    {
      "name": "cancelOrder",
      "operation": "specs/supplier.yaml#cancelOrder",
      "type": "rest"
    }
  ],
  "events": [
    {
      "name": "orderEvent",
      "kind": "consumed",
      "type": "OrderEventType",
      "source": "Client",
      "correlation": [
        {
          "contextAttributeName": "orderid"
        }
      ]
    },
    {
      "name": "shippingEvent",
      "kind": "consumed",
      "type": "ShippingEventType",
      "source": "Shipper",
      "correlation": [
        {
          "contextAttributeName": "orderid"
        }
      ]
    },
    {
      "name": "cancelEvent",
      "kind": "consumed",
      "type": "CancelEventType",
      "source": "Client",
      "correlation": [
        {
          "contextAttributeName": "orderid"
        }
      ]
    }
  ],
  "states": [
    {
      "name": "Order Received",
      "type": "event",
      "onEvents": [
        {
          "eventRefs": ["orderEvent"]
        }
      ],
      "transition": "Check Inventory"
    },
    {
      "name": "Check Inventory",
      "type": "operation",
      "actions": [
        {
          "name": "printAction",
          "functionRef": {
            "refName": "printMessage",
            "arguments": {
              "message": "\"Check Inventory \" + .orderId"
            }
          },
          "actionDataFilter": {
            "fromStateData": ".",
            "results": "{inventory: .item | test(\"0+\") }"
          }
        }
      ],
      "transition": "Item Available?"
    },
    {
      "name": "Item Available?",
      "type": "switch",
      "dataConditions": [
        {
          "condition": ".inventory",
          "transition": "Prepare for Shipping"
        }
      ],
      "defaultCondition": {
        "transition": "Forward to External Supplier"
      }
    },
    {
      "name": "Prepare for Shipping",
      "type": "operation",
      "transition": "Order Shipped or Cancelled",
      "actions": [
        {
          "name": "printAction",
          "functionRef": {
            "refName": "printMessage",
            "arguments": {
              "message": "\"Prepare for Shipping\""
            }
          }
        }
      ]
    },
    {
      "name": "Forward to External Supplier",
      "type": "operation",
      "transition": "Order Shipped or Cancelled",
      "actions": [
        {
          "name": "sendOrderRestCall",
          "functionRef": {
            "refName": "sendOrder",
            "arguments": {
              "supplier-id": "\"1\"",
              "content": ".orderId"
            }
          }
        }
      ]
    },
    {
      "name": "Order Shipped or Cancelled",
      "type": "event",
      "transition": "Is Shipped?",
      "exclusive": true,
      "onEvents": [
        {
          "eventRefs": ["shippingEvent"]
        },
        {
          "eventRefs": ["cancelEvent"],
          "eventDataFilter": {
            "data": "{cancel:true}"
          }
        }
      ]
    },
    {
      "name": "Is Shipped?",
      "type": "switch",
      "dataConditions": [
        {
          "name": "order cancelled",
          "condition": ".cancel == true",
          "transition": "Compensate Order"
        }
      ],
      "defaultCondition": {
        "transition": "Notify Customer"
      }
    },
    {
      "name": "Compensate Order",
      "type": "operation",
      "actions": [
        {
          "name": "printAction",
          "functionRef": {
            "refName": "printMessage",
            "arguments": {
              "message": "\"Compensate Order\""
            }
          }
        }
      ],
      "end": {
        "terminate": true,
        "compensate": true
      }
    },
    {
      "name": "Notify Customer",
      "type": "operation",
      "actions": [
        {
          "name": "printAction",
          "functionRef": {
            "refName": "printMessage",
            "arguments": {
              "message": "\"Notify Customer\""
            }
          }
        }
      ],
      "end": {
        "terminate": true
      }
    }
  ]
}
